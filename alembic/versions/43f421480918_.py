"""

Revision ID: 43f421480918
Revises: 4987ae3418d1
Create Date: 2024-12-25 14:53:21.222440

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "43f421480918"
down_revision: Union[str, None] = "890e82da687e"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("ix_order_books_id", table_name="order_books")
    op.drop_table("order_books")
    op.drop_index("ix_orders_id", table_name="orders")
    op.drop_table("orders")
    op.add_column("books", sa.Column("title", sa.String(length=100), nullable=False))
    op.add_column(
        "books",
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Date of creating",
        ),
    )
    op.add_column(
        "books",
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Date of updating",
        ),
    )
    op.drop_index("ix_books_name", table_name="books")
    op.create_index(op.f("ix_books_title"), "books", ["title"], unique=False)
    op.drop_column("books", "name")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "books",
        sa.Column("name", sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    )
    op.drop_index(op.f("ix_books_title"), table_name="books")
    op.create_index("ix_books_name", "books", ["name"], unique=False)
    op.drop_column("books", "updated_at")
    op.drop_column("books", "created_at")
    op.drop_column("books", "title")
    op.create_table(
        "orders",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('orders_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("status", sa.VARCHAR(length=50), autoincrement=False, nullable=True),
        sa.Column(
            "total_price",
            sa.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("email", sa.VARCHAR(length=100), autoincrement=False, nullable=False),
        sa.Column("phone", sa.VARCHAR(length=15), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="orders_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_index("ix_orders_id", "orders", ["id"], unique=False)
    op.create_table(
        "order_books",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("order_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("book_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("quantity", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["book_id"], ["books.id"], name="order_books_book_id_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["order_id"], ["orders.id"], name="order_books_order_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="order_books_pkey"),
    )
    op.create_index("ix_order_books_id", "order_books", ["id"], unique=False)
    # ### end Alembic commands ###
